version: '3.8'

services:
  blinko-website:
    container_name: blinko-website
    hostname: blinko-website
    build:
      context: .
      args:
        # 这个值通常不需要保密，可以直接写
        USE_MIRROR: "true"
      dockerfile: ./dockerfile
    environment:
      NODE_ENV: production
      # 这些 URL 通常也是环境相关的，用变量更好
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      NEXT_PUBLIC_BASE_URL: ${NEXT_PUBLIC_BASE_URL}
      # 敏感信息，使用变量
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD}@blinko-postgres:5432/postgres
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    ports:
      - "${HTTP_PORT}:1111" # 将端口也变量化，增加灵活性
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://blinko-website:1111/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - blinko-network

  postgres:
    image: postgres:14
    container_name: blinko-postgres
    hostname: blinko-postgres
    restart: always
    ports:
      - "${POSTGRES_PORT}:5432" # 将端口也变量化
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      # 敏感信息，使用变量
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      # 将 PostgreSQL 数据持久化到您手动指定的路径
      - ${POSTGRES_DATA_PATH}:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "postgres"]
      interval: 5s
      timeout: 10s
      retries: 5
    networks:
      - blinko-network

networks:
  blinko-network:
    external: true